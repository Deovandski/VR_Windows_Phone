// ------------------------------------------------------------------------
// ========================================================================
// THIS CODE AND INFORMATION ARE GENERATED BY AUTOMATIC CODE GENERATOR
// ========================================================================
// Template:   	ViewModel.tt
// Version:		2.0
using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Windows;
using System.Windows.Input;
using Controls = WPAppStudio.Controls;
using Entities = WPAppStudio.Entities;
using EntitiesBase = WPAppStudio.Entities.Base;
using IServices = WPAppStudio.Services.Interfaces;
using IViewModels = WPAppStudio.ViewModel.Interfaces;
using Localization = WPAppStudio.Localization;
using Repositories = WPAppStudio.Repositories;
using Services = WPAppStudio.Services;
using ViewModelsBase = WPAppStudio.ViewModel.Base;
using WPAppStudio;
using WPAppStudio.Shared;

namespace WPAppStudio.ViewModel
{
    /// <summary>
    /// Implementation of MenuSection_Menu ViewModel.
    /// </summary>
    [CompilerGenerated]
    [GeneratedCode("Radarc", "4.0")]
    public partial class MenuSection_MenuViewModel : ViewModelsBase.VMBase, IViewModels.IMenuSection_MenuViewModel
    {       

		private readonly IServices.IDialogService _dialogService;
		private readonly IServices.INavigationService _navigationService;
		private readonly IServices.ILockScreenService _lockScreenService;
		private readonly Repositories.IRadioStreamer_Streamer _radioStreamer_Streamer;
		
        /// <summary>
        /// Initializes a new instance of the <see cref="MenuSection_MenuViewModel" /> class.
        /// </summary>
        /// <param name="dialogService">The Dialog Service.</param>
        /// <param name="navigationService">The Navigation Service.</param>
        /// <param name="lockScreenService">The Lock Screen Service.</param>
        /// <param name="radioStreamer_Streamer">The Radio Streamer_ Streamer.</param>
        public MenuSection_MenuViewModel(IServices.IDialogService dialogService, IServices.INavigationService navigationService, IServices.ILockScreenService lockScreenService, Repositories.IRadioStreamer_Streamer radioStreamer_Streamer)
        {
			_dialogService = dialogService;
			_navigationService = navigationService;
			_lockScreenService = lockScreenService;
			_radioStreamer_Streamer = radioStreamer_Streamer;
        }
		
	
		private Controls.MenuItemData _selectedMenuSection_MenuMenuControl;

        /// <summary>
        /// SelectedMenuSection_MenuMenuControl property.
        /// </summary>		
        public Controls.MenuItemData SelectedMenuSection_MenuMenuControl
        {
            get
            {
				return _selectedMenuSection_MenuMenuControl;
            }
            set
            {
                _selectedMenuSection_MenuMenuControl = value;
                if (value != null)
                    _navigationService.NavigateTo(value);
            }
        }
	
		private ObservableCollection<Entities.StreamerSchema> _radioStreamer_ListListControlCollection;

        /// <summary>
        /// RadioStreamer_ListListControlCollection property.
        /// </summary>		
        public ObservableCollection<Entities.StreamerSchema> RadioStreamer_ListListControlCollection
        {
            get
            {
				
                if(_radioStreamer_ListListControlCollection == null)
					_radioStreamer_ListListControlCollection = _radioStreamer_Streamer.GetData();
				return _radioStreamer_ListListControlCollection;     
            }
            set
            {
                SetProperty(ref _radioStreamer_ListListControlCollection, value);
            }
        }
	
		private int _radioStreamer_ListListControlCollectionPageNumber;

        /// <summary>
        /// RadioStreamer_ListListControlCollectionPageNumber property.
        /// </summary>		
        public int RadioStreamer_ListListControlCollectionPageNumber
        {
            get
            {
				return _radioStreamer_ListListControlCollectionPageNumber;
            }
            set
            {
                SetProperty(ref _radioStreamer_ListListControlCollectionPageNumber, value);
            }
        }
	
		private Entities.StreamerSchema _selectedRadioStreamer_ListListControlCollection;

        /// <summary>
        /// SelectedRadioStreamer_ListListControlCollection property.
        /// </summary>		
        public Entities.StreamerSchema SelectedRadioStreamer_ListListControlCollection
        {
            get
            {
				return _selectedRadioStreamer_ListListControlCollection;
            }
            set
            {
                _selectedRadioStreamer_ListListControlCollection = value;
                if (value != null)
                    _navigationService.NavigateTo<IViewModels.IRadioStreamer_DetailViewModel>(_selectedRadioStreamer_ListListControlCollection);
            }
        }
	    /// <summary>
        /// IsInternetAvailable property.
        /// </summary>		
        public override Visibility IsInternetAvailable
        {
	      get
          {
				return Visibility.Collapsed; 
           }
		}

        /// <summary>
        /// Delegate method for the GetRadioStreamer_ListListControlCollectionCommand command.
        /// </summary>
        public  void GetRadioStreamer_ListListControlCollectionCommandDelegate(int pageNumber= 0) 
        {
				GetRadioStreamer_ListListControlCollectionData(pageNumber);
        }
		

        private ICommand _getRadioStreamer_ListListControlCollectionCommand;

        /// <summary>
        /// Gets the GetRadioStreamer_ListListControlCollectionCommand command.
        /// </summary>
        public ICommand GetRadioStreamer_ListListControlCollectionCommand
        {
            get { return _getRadioStreamer_ListListControlCollectionCommand = _getRadioStreamer_ListListControlCollectionCommand ?? new ViewModelsBase.DelegateCommand<int>(GetRadioStreamer_ListListControlCollectionCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the SetLockScreenCommand command.
        /// </summary>
        public  void SetLockScreenCommandDelegate() 
        {
				_lockScreenService.SetLockScreen("LockScreen-5cf9d8d2-6e64-4a19-b86c-536ba2d66cc4.jpg");
        }
		

        private ICommand _setLockScreenCommand;

        /// <summary>
        /// Gets the SetLockScreenCommand command.
        /// </summary>
        public ICommand SetLockScreenCommand
        {
            get { return _setLockScreenCommand = _setLockScreenCommand ?? new ViewModelsBase.DelegateCommand(SetLockScreenCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the AboutCommand command.
        /// </summary>
        public  void AboutCommandDelegate() 
        {
				_navigationService.NavigateTo<IViewModels.IAboutViewModel>();
        }
		

        private ICommand _aboutCommand;

        /// <summary>
        /// Gets the AboutCommand command.
        /// </summary>
        public ICommand AboutCommand
        {
            get { return _aboutCommand = _aboutCommand ?? new ViewModelsBase.DelegateCommand(AboutCommandDelegate); }
        }

        private void GetRadioStreamer_ListListControlCollectionData(int pageNumber = 0)
        {
				RadioStreamer_ListListControlCollectionPageNumber = pageNumber;

                if (pageNumber == 0)
				{
					var items = _radioStreamer_Streamer.GetData(pageNumber);
                    RadioStreamer_ListListControlCollection = items;
				}
                else   
				{
					var items = _radioStreamer_Streamer.GetData(pageNumber);
                    foreach (var item in items)                    
                        RadioStreamer_ListListControlCollection.Add(item);
				}
		}
    }
}
